3주차 정리노트
202104171 김준혁, 202104197 박서준

q: b = a++ 이랑 b = ++a의 연산결과가 다른데 왜 그럴까?
a: 연산 과정을 앞에서부터 순서대로 진행한다고 생각하면 쉬운데, 전자의 경우 b = a 를 먼저 진행하고 a에 a+1를 연산한거고
  b = ++a의 경우에는 b = a+1로 a의 값에 +1을 하고 그 값을 b에 연산한 거야.

q: %%는 왜 쓰는거지?
a: %를 printf하기 위해서는 %%를 사용해야 우리가 원하는 %를 출력할수 있어, %만 사용하면 이 기호가 가지고 있는 역할이 실행되기 때문에
다른 결과값이 나올거야.

q: 그렇다면 우선순위는 어떻게 될까
a: 단항 연산자인 !이 가장 높고 다음이 &&이며 ||가 가장낮음.

q: 다른 연산자의 우선순위는 어떻게 될까?
a: 단항->산술->이동->관계->비트->논리->조건->대입
  ()안의 내용을 우선적으로 처리하게 되어있어.
  단항 연산자를 이항 연산자보다 먼저 처리하고
  증감 연산자는 위치에 따라 처리되는 순서가 다르지만 대개 왼쪽에서 오른쪽으로 수행해

q: unsigned를 사용하는 이유는 뭐야?
a: 기존의 자료형은 음수와 양수를 모두 포함하는 범위를 가지는데, 우리가 현재 사용할 변수는 음수를 필요로 하지 않기때문에 그부분을 없애고 양수를 더 표현하고자 unsigned를 사용하여
양수를 2배 더 사용할 수 있게 하는 역할이야.

q: 비트 연산자를 활용한 예제문제에서 왜 firstmark를 128로 설정한건지 이해가 잘 안가
a: 먼저 unsigned char 자료형을 사용해서 기존에 127까지 표현하는 char를 255까지 표현할 수 있게 만들어주고 우리가 알고 싶은 정보는 첫번째 비트와 마지막 비트 이기때문에
비트연산자 &를 활용해서 해결한게 주요 포인트야. 비트 연산자 &는 두개의 비트가 모두 같을때만 1을 반환하고 나머지는 0을 반환하기 때문에 원하는 정보를 쉽게 구별할 수 있겠지.
그래서 10000000 로 첫번째 비트를 찾아내고 00000001 로 마지막 비트를 찾아낼건데, 만약 우리가 알고싶은 10진수가 2라면 이진수로 00000010 라서 비트연산자 &로 확인해보면
첫번째 비트가 다르기때문에 0임을 알수있고, 마지막 비트도 다르기 때문에 0임을 알수 있지.

q: 그러면 3이라면 어떻게 될까?
a: 00000011니까 첫번째 비트는 달라서 0이고, 마지막 비트는 같으니까 1이겠네.

q: 255 이상인 경우에는 어떻게 반환할까?
a: unsigned char로는 표현할 수 없어서 우리가 원하는 값이 도출되지 않고 오버플로우가 생길거야. 이런경우는 int처럼 더 큰 정수를 표현하는 자료형으로 바꿀 생각을 할 것 같아.

q: 콤마 연산자 예제 문제에서 왜 y의 값이 15가 아니라 5일까?
a: x를 초기화 할때 y값을 연산했지만 가장 우선순위가 낮아서 뒤에 오는 y값은 이전값인 5가 저장되어있는 것같아.
만약에 y를 15로 초기화 하고싶다면 x=y를 넣어주면 15로 초기화 될거야.

